#summary Get The Facts on Signatures
#sidebar TableOfContents

= Get The Facts on Signatures =

This document will guide you through the various options you have for integrating electronic signatures within your business processes. We first give an executive summary via the following table.

|| *Aspect* || *PDF signatures* || *XML signatures* ||
|| Open Standard || yes || yes ||
|| Data Format || PDF || whatever you want it to be ||
|| Easy of implementation || limited choice: iText or via proprietary products || lightweight via various open source solutions ||
|| Business Integration || almost forced using proprietary products to extract data || you can define your own XML schema according to your business needs ||
|| Validation || proprietary product specific as people will want valid signatures in Acrobat Reader || under your own control ||
|| Service Directive readiness || PAdES is premature || XAdES is a proven standard that has been implemented in various open source projects ||
|| Long-Term Accessibility || your PDFs just might survive the Adobe products || no matter how the IT landscape changes, there will always be some notepad ||
|| Long-Term Signature Validity || PAdES is premature, so is PAdES-A || XAdES-A has proven implementations (ETSI XAdES plugtests) ||
|| Risk for Vendor lock-in || high. What if Adobe decides to charge for the Reader? || low. XML parsers are all over the place ||
|| Preservation of Visualization || PDF/A is cool. But what if the proprietary product is buggy? || via XSLT to HTML will always work ||
|| Visualization of Signatures || PDF has this feature. Is human interpretation this important? || the business application should handle this aspect ||


== Open Standard ==

Since nowadays everything is an 'open standard' maybe we should revise the definition of 'open'.
'Open' should not only mean publishing your specifications online somewhere and have a standardization body ratify this.
'Open' should also include the ability for developers to implement the standard.
And this is where PDF signatures totally fail. It is nearly impossible for one to implement PDF signatures using open source libraries.
Especially since iText recently changed its license model preventing commercial usage of their library.
On the other hand, I was able to implement XAdES-X-L version 1.4.2 in less than a week as part of our eID Digital Signature Service product.


== Data Format ==

When you choose for PAdES signatures, you are forces to use PDF as data container. Of course PDF can embed other data formats, but accessing this data often requires proprietary products.
For XAdES on the other hand you can choose whatever data format you want to.
As a matter of fact, all commodity office document formats (ODF/OpenOffice and OOXML/Microsoft Office) offer native support for XML signatures (and thus allow for XAdES).

== Easy of implementation ==

== Business Integration ==

Allowing a business to define its own XML schema according to the workflow that needs to be implemented gives maximum freedom of choice.
Of course, PDF also allows for embedding XML fragments, but adding/extracting this XML data often required using proprietary products.
XML on the other hand is the most versatile structure to handle business data.

== Validation ==

== Service Directive readiness ==

== Long-Term Accessibility ==

== Long-Term Signature Validity ==

== Risk for Vendor lock-in ==

== Preservation of Visualization ==

== Visualization of Signatures ==

Another interesting subject is the 'human-readable' aspect of a signature.
There seems to be an interesting mind-twist that some play very handy: they claim that PDF is more human-readable than XML.
I noticed the same mind-twist when working on the TSL.
There I also witnessed the fact that people think of PDF as being human-readable, while XML is being machine-readable.
However, when you open a XAdES-X-L signed XML file in notepad, and you do the same for PDF, all of the sudden it becomes very quite in the room.
In my view PDF is not human-readable, the output of a PDF reader is human-readable, but the PDF format itself carries some serious vendor locking risk.